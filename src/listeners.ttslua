function onSave()
  local save = deepcopy(state)
  local json = JSON.encode({
    state = save
  })

  return json
end

function onLoad(save)
  setNotes('')

  if test and _tests.run ~= nil then
    _tests.run()
  end

  lockObjects()
  if save ~= nil and string.len(save) > 2 then
    local data = JSON.decode(save)

    inflate(data.state)

    local playerCount = 0
    ieach(data.state.players, function() playerCount = playerCount + 1 end)

    if data.state.test == state.test and playerCount > 0 then
      state = data.state

      if state.theme == nil then
        state.theme = 'firstTry'
      end

      local players = 0
      for color, player in pairs(state.players) do
        if player.scoreCard == nil then
          state.players[color] = nil
        else
          players = players + 1
        end
      end

      if players == 0 then
        return reset()
      end
      Redraw()
    else
      return reset()
    end
  else
    return reset()
  end
end

function onPlayerChangeColor(player_color)
  local playerCount = 0
  each(state.players, function() playerCount = playerCount + 1 end)
  if playerCount == 0 then
    reset()
  end
end

function getRollIdentifier()
  if state.turn.color ~= nil and state.players[state.turn.color] ~= nil then
    return state.turn.color .. ':' .. state.players[state.turn.color].rolls
  end
  return 'new game'
end

function onObjectRandomize(object, color)
  if state.rolling then
    return
  end

  if isDice(object) then
    state.rolling = true
    if state.turn.color ~= color then
      state.turn.color = color
      state.turn.roll = 0
    end
    local rollPlayer = state.turn.color
    local rolls = state.turn.rolls
    Redraw()
    whenDiceResting(function()
      if rollPlayer ~= state.turn.color then
        return
      end
      state.rolling = true
      state.hideRoll = true
      Redraw()
      gatherDice()
      whenDiceResting(function()
        if rollPlayer ~= state.turn.color then
          return
        end
        normalizeDiceRotation()
        state.hideRoll = false
        state.rolling = false
        if isJoker() then
          times5(function()
            broadcastToAll('Joker!!', state.turn.color)
          end)
        end
        if yahtzeeScore() > RealScore(state.turn.color, 'yahtzee', state.round, true) then
          broadcastYahtzee()
        end

        each(state.keep, function(keep, idx)
          if (keep == false) then
            state.dice[idx].setLock(true)
          end
        end)
        if state.turn.rolls == 3 then
          each(state.keep, function(keep, idx)
            if (keep == false) then
              lockDice(idx, state.turn.color)
            end
          end)
        end
        Redraw()
      end)
    end)
  end
end

function onPlayerTurn()
  local playerCount = 0
  local lastColor = nil
  for idx, color in pairs(getSeatedPlayers()) do
    playerCount = playerCount + 1
    lastColor = color
  end
  if playerCount == 1 then
    Turns.enable = false
    Turns.turn_color = nil
    return
  end

  local shouldBe = state.turn.color
  if shouldBe ~= nil and Turns.turn_color ~= shouldBe then
    defer(function()
      Turns.turn_color = shouldBe
    end)
    return
  end
  Redraw()
end
